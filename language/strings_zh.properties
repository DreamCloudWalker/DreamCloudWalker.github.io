shader=着色器
rendering_tube=渲染管线
transform_matrix=变换矩阵
model_matrix=模型矩阵
rotation_matrix=旋转矩阵
rotation_calc=(ZYX顺规——因为物体坐标系相对世界坐标系z-y-x旋转顺序时，将最后的物体坐标系向世界坐标系转换时需要逆序进行，因此矩阵反序相乘)
rotate=旋转
translate=平移
scale=缩放
view_matrix=视图矩阵
view_matrix_transform=视图变换
proj_matrix=投影矩阵
pers_proj_matrix=透视投影变换
mvp_matrix=MVP矩阵
euler_angle=欧拉角、万向节
euler_angle_rotation=欧拉角旋转
axis_angle=轴-角
axis_angle_rot=轴角旋转
quaternion=四元数
quaternion_rot=四元数旋转
rotation_demo=眼镜蛇+落叶飘动画
prototype=原型图
texture=纹理
blend_sort=混合与透明排序
uv_coord=UV坐标
sample=采样器
mipmap=Mipmap贴图
yuv_video=YUV视频渲染
video_filter_inverse=反色
video_filter_normal=普通
lighting=光照
basic_light=基本光照
ambient_light=环境光
diffuse_light=漫射光
spec_light=镜面光
light_model=光照模型
phong_lighting=Phong光照
per_vertex_frag_lighting=逐顶点&逐像素光照
per_vertex_frag_lighting_tip=逐顶点/逐像素光照
fresnel_reflection=菲涅尔效果
normal_mapping=法线贴图
lens_flare=镜头光晕
fbo_shadow=FBO、RTT、阴影
real_time_shadow=实时阴影
pbr_rending=PBR渲染
scene_management=场景管理
scene_tree=场景树
quad_oct_tree=四叉/八叉树
level_of_detail=LOD层次细节
compile_and_run=编译并运行
compile_and_run_shader=编译并运行着色器(左窗口背景绘制为例)
render_flow_eg=渲染管线流程图如下：
mvp_demo=MVP矩阵（以计算左边窗口红色圆柱中心点屏幕坐标为例）
three_body=三体专题
dance_anim=福利